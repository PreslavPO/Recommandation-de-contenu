openapi: 3.0.0
info:
  description: |
    TheMoviesualizer API, get informations and recommendations to movies
  version: "1.0.0"
  title: TheMoviesualizer
servers:
  - description: Local server
    url: http://localhost:5000
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/Spaicat/TheMoviesualizer/1.0.0
tags:
  - name: api
    description: Everything about movies
  - name: user
    description: Operations about authentification of user
paths:
  "/api/movie/{movieId}":
    get:
      tags:
        - api
      summary: Get details
      description: Get main information about a movie
      operationId: GET_movie-movie_id
      parameters:
        - name: movieId
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Movie"
        "400":
          $ref: "#/components/responses/Error-401"
        "404":
          $ref: "#/components/responses/Error-404"
  "/api/movie/{movieId}/credits":
    get:
      tags:
        - api
      summary: Get Credits of a movie
      description: Get the cast and crew for a movie.
      operationId: GET_movie-movie_id-credits
      parameters:
        - name: movieId
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: object
                    properties:
                      "$oid":
                        type: string
                  id:
                    type: integer
                  cast:
                    type: array
                    items:
                      type: object
                      properties:
                        adult:
                          type: boolean
                        gender:
                          type: integer
                          nullable: true
                        id:
                          type: integer
                        known_for_department:
                          type: string
                        name:
                          type: string
                        original_name:
                          type: string
                        popularity:
                          type: string
                        profile_path:
                          type: string
                        cast_id:
                          type: integer
                        character:
                          type: string
                        credit_id:
                          type: string
                        order:
                          type: integer
                  crew:
                    type: array
                    items:
                      type: object
                      properties:
                        adult:
                          type: boolean
                        gender:
                          type: integer
                          nullable: true
                        id:
                          type: integer
                        known_for_department:
                          type: string
                        name:
                          type: string
                        original_name:
                          type: string
                        popularity:
                          type: number
                        profile_path:
                          type: string
                        credit_id:
                          type: string
                        department:
                          type: string
                        job:
                          type: string
                example:
                  _id:
                    "$oid": 6240ab97c398d9e7d052ebd0
                  id: 157336
                  cast:
                    - adult: false
                      cast_id: 9
                      character: "Joseph 'Coop' Cooper"
                      credit_id: 52fe4bbf9251416c910e47cb
                      gender: 2
                      id: 10297, 
                      known_for_department: Acting
                      name: Matthew McConaughey
                      order: 0
                      original_name: Matthew McConaughey
                      popularity: 29.17
                      profile_path: /wJiGedOCZhwMx9DezY8uwbNxmAY.jpg
                    - adult: false
                      cast_id: 169
                      character: "Dr. Amelia Brand"
                      credit_id: 57fe146fc3a368504a00261e
                      gender: 1
                      id: 1813, 
                      known_for_department: Acting
                      name: Anne Hathaway
                      order: 1
                      original_name: Anne Hathaway
                      popularity: 31.046
                      profile_path: /5sWEVBNiBwn3qSZ1iC9Pv6NScGH.jpg
                  crew:
                    - adult: false, 
                      credit_id: 52fe4bbf9251416c910e4801, 
                      department: Sound, 
                      gender: 2, 
                      id: 947, 
                      job: Original Music Composer, 
                      known_for_department: Sound, 
                      name: Hans Zimmer, 
                      original_name: Hans Zimmer, 
                      popularity: 4.63, 
                      profile_path: /tpQnDeHY15szIXvpnhlprufz4d.jpg
                    - adult: false, 
                      credit_id: 5e83abfad236e60017fd99ed, 
                      department: Directing, 
                      gender: 2, 
                      id: 525, 
                      job: Director, 
                      known_for_department: Directing, 
                      name: Christopher Nolan, 
                      original_name: Christopher Nolan, 
                      popularity: 11.58, 
                      profile_path: /xuAIuYSmsUzKlUMBFGVZaWsY3DZ.jpg
        "400":
          $ref: "#/components/responses/Error-401"
        "404":
          $ref: "#/components/responses/Error-404"
  "/api/movie/list":
    get:
      tags:
        - api
      summary: Get Movies list
      description: Get a list of movies by different types of data
      operationId: GET_movie-list
      parameters:
        - in: query
          name: page
          description: "Specify which page to query"
          schema:
            type: integer
            default: 1
        - in: query
          name: sort_by
          description: "Sort by option choosed"
          schema:
            type: string
            enum:
              - top_rating.asc
              - top_rating.desc
              - release_date.asc
              - release_date.desc
            default: top_rating.desc
        - in: query
          name: original_language
          description: "Specify an ISO 639-1 string to filter results by their original language value."
          schema:
            type: string
        - in: query
          name: genres
          description: "Comma separated value of genre ids that you want to include in the results."
          schema:
            type: string
        - in: query
          name: release_date.gte
          description: "Filter and only include movies that have a release date (looking at all release dates) that is greater or equal to the specified value."
          schema:
            type: string
            format: date
        - in: query
          name: release_date.lte
          description: "Filter and only include movies that have a release date (looking at all release dates) that is less than or equal to the specified value."
          schema:
            type: string
            format: date
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: object
                properties:
                  page:
                    type: integer
                    example: 1
                  results:
                    type: array
                    items:
                      $ref: "#/components/schemas/Movie"
                  total_results:
                    type: integer
                  total_pages:
                    type: integer
        "400":
          $ref: "#/components/responses/Error-401"
        "404":
          $ref: "#/components/responses/Error-404"
  "/api/movie/genres":
    get:
      tags:
        - api
      summary: Get list of all genres
      description: Get the list of all genres for movies
      operationId: GET_movie-genres
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                example:
                  - id: 28
                    name: Action
                  - id: 13
                    name: Science-Fiction
        "400":
          $ref: "#/components/responses/Error-401"
        "404":
          $ref: "#/components/responses/Error-404"
  "/api/movie/languages":
    get:
      tags:
        - api
      summary: Get list of all languages
      description: Get the list of language for movies
      operationId: GET_movie-languages
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    iso_639_1:
                      type: string
                    name:
                      type: string
                    total:
                      type: integer
                example:
                  - iso_639_1: en
                    name: English
                    total: 12062
                  - iso_639_1: fr
                    name: French
                    total: 2263
                  - iso_639_1: de
                    name: Deutsch
                    total: 1864
        "400":
          $ref: "#/components/responses/Error-401"
        "404":
          $ref: "#/components/responses/Error-404"
  "/api/movie/{movieId}/recommendation":
    get:
      tags:
        - api
      summary: Get recommendation of a movie
      description: Get movies similar to the movie specified.
      operationId: GET_movie-movie_id-recommendation
      parameters:
        - name: movieId
          in: path
          required: true
          schema:
            type: integer
        - in: query
          name: page
          description: "Specify which page to query"
          schema:
            type: integer
            default: 1
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: object
                properties:
                  page:
                    type: integer
                    example: 1
                  results:
                    type: array
                    items:
                      $ref: "#/components/schemas/Movie"
                  total_results:
                    type: integer
                  total_pages:
                    type: integer
        "400":
          $ref: "#/components/responses/Error-401"
        "404":
          $ref: "#/components/responses/Error-404"
  "/user/signup":
    post:
      tags:
        - user
      summary: Create user
      description: Sign up by creating and new user.
      operationId: POST_user-signup
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                password:
                  type: string
        description: Created user object
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "404":
          $ref: "#/components/responses/Error-404"
  "/user/login":
    post:
      tags:
        - user
      summary: Remove user session
      description: This can only be done by the logged in user.
      operationId: POST_user-login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                password:
                  type: string
        description: Created user object
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "401":
          $ref: "#/components/responses/Error-401"
        "404":
          $ref: "#/components/responses/Error-404"
  "/user/logout":
    post:
      tags:
        - user
      summary: Remove user session
      description: This can only be done by the logged in user.
      operationId: POST_user-logout
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                password:
                  type: string
        description: Created user object
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "400":
          $ref: "#/components/responses/Error-401"
  "/user/session":
    get:
      tags:
        - user
      summary: Check if user connected
      description: Check if user is connected by checking user session
      operationId: GET_user-session
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: object
                properties:
                  login:
                    type: boolean
                  user:
                    $ref: "#/components/schemas/User"
        "401":
          $ref: "#/components/responses/Error-401"
  "/user/rating/{movieId}":
    get:
      tags:
        - user
      summary: Get user rating
      description: Get user rating about a movie
      operationId: GET_user-rating-movieId
      parameters:
        - name: movieId
          in: path
          required: true
          schema:
            type: integer
        - name: userId
          in: query
          description: "Id of the user to get data from"
          schema:
            type: string
          required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: object
                properties:
                  movieId:
                    type: string
                  rating:
                    type: integer
        "400":
          $ref: "#/components/responses/Error-401"
        "404":
          $ref: "#/components/responses/Error-404"
    post:
      tags:
        - user
      summary: Set user rating
      description: Set new user rating about a movie
      operationId: POST_user-rating-movieId
      parameters:
        - name: movieId
          in: path
          required: true
          schema:
            type: integer
        - name: userId
          in: query
          description: "Id of the user to get data from"
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                score:
                  type: integer
                  minimum: 1
                  maximum: 10
        description: "Value of the rating you want to submit."
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "400":
          $ref: "#/components/responses/Error-401"
        "401":
          $ref: "#/components/responses/Error-401"
  "/user/rating":
    get:
      tags:
        - user
      summary: Get movies rated by a user
      description: Get movies rated by a user
      operationId: GET_user-rating
      parameters:
        - name: userId
          in: query
          description: "Id of the user to get data from"
          schema:
            type: string
          required: true
        - in: query
          name: page
          description: "Specify which page to query"
          schema:
            type: integer
            default: 1
        - in: query
          name: sort_by
          description: "Sort by option choosed"
          schema:
            type: string
            enum:
              - rating.asc
              - rating.desc
              - last_rated
            default: last_rated
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: object
                properties:
                  page:
                    type: integer
                    example: 1
                  results:
                    type: array
                    items:
                      $ref: "#/components/schemas/Movie"
                  total_results:
                    type: integer
                  total_pages:
                    type: integer
        "400":
          $ref: "#/components/responses/Error-401"
        "404":
          $ref: "#/components/responses/Error-404"
  "/user/recommendation":
    get:
      tags:
        - user
      summary: Get recommended movies
      description: Get movies recommended to a specific user
      operationId: GET_user-recommendation
      parameters:
        - name: userId
          in: query
          description: "Id of the user to get data from"
          schema:
            type: string
          required: true
        - in: query
          name: page
          description: "Specify which page to query"
          schema:
            type: integer
            default: 1
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: object
                properties:
                  page:
                    type: integer
                    example: 1
                  results:
                    type: array
                    items:
                      $ref: "#/components/schemas/Movie"
                  total_results:
                    type: integer
                  total_pages:
                    type: integer
        "400":
          $ref: "#/components/responses/Error-401"
        "401":
          $ref: "#/components/responses/Error-401"
        "404":
          $ref: "#/components/responses/Error-404"
  "/user/information":
    get:
      tags:
        - user
      summary: Get user information
      description: Get profile information about a user
      operationId: GET_user-information
      parameters:
        - name: userId
          in: query
          description: "Id of the user to get data from"
          schema:
            type: string
          required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: object
                properties:
                  ratings:
                    type: array
                    items:
                      type: object
                      properties:
                        movieId:
                          type: integer
                        rating:
                          type: integer
                        timestamp:
                          type: string
                          format: date
        "400":
          $ref: "#/components/responses/Error-401"
        "401":
          $ref: "#/components/responses/Error-401"
        "404":
          $ref: "#/components/responses/Error-404"
components:
  schemas:
    User:
      type: object
      properties:
        _id:
          type: integer
          format: int64
        username:
          type: string
        email:
          type: string
        password:
          type: string
      xml:
        name: User
    Genre:
      type: object
      properties:
        id:
          type: integer
          example: 878
        name:
          type: string
          example: Science Fiction
      xml:
        name: Genre
    Movie:
      type: object
      required:
        - _id
      properties:
        _id:
          type: object
          properties:
            "$oid":
              type: string
              example: 6240a9bd2143e3abdcface2c
        id:
          type: integer
          example: 157336
        adult:
          type: boolean
        backdrop_path:
          type: string
          nullable: true
          example: /5C3RriLKkIAQtQMx85JLtu4rVI2.jpg
        belongs_to_collection:
          type: object
          nullable: true
          example: null
          properties:
            id:
              type: integer
            backdrop_path:
              type: string
            name:
              type: string
            poster_path:
              type: string
        genres:
          type: array
          items:
            $ref: "#/components/schemas/Genre"
          example:
            - id: 12
              name: Adventure
            - id: 18
              name: Drama
            - id: 878
              name: Science Fiction
        homepage:
          type: string
          nullable: true
          example: ""
        imdb_id:
          type: string
          nullable: true
          example: tt0816692
          minLength: 9
          maxLength: 9
          pattern: ^tt[0-9]{7}
        original_language:
          type: string
          example: en
        original_title:
          type: string
          example: Interstellar
        overview:
          type: string
          nullable: true
          example: Interstellar chronicles the adventures of a group of explorers who make use of a newly discovered wormhole to surpass the limitations on human space travel and conquer the vast distances involved in an interstellar voyage.
        popularity:
          type: number
          example: 32.213481
        poster_path:
          type: string
          nullable: true
          example: /gEU2QniE6E77NI6lCU6MxlNBvIx.jpg
        production_companies:
          type: array
          xml:
            wrapped: true
          items:
            type: object
            xml:
              name: production_company
            properties:
              id:
                type: integer
                example:
              name:
                type: string
            example:
              - id: 4
                name: Paramount Pictures
              - id: 923
                name: Legendary Pictures
        production_countries:
          type: array
          xml:
            wrapped: true
          items:
            type: object
            xml:
              name: production_countries
            properties:
              iso_3166_1:
                type: string
              name:
                type: string
            example:
              - iso_3166_1: CA
                name: Canada
              - iso_3166_1: US
                name: United States of America
              - iso_3166_1: GB
                name: United Kingdom
        release_date:
          type: string
          format: date
          example: "2014-11-05"
        revenue:
          type: integer
          example: 675120017
        runtime:
          type: integer
          nullable: true
          example: 169.0
        spoken_languages:
          type: array
          xml:
            name: spoken_language
            wrapped: true
          items:
            type: object
            properties:
              iso_639_1:
                type: string
              name:
                type: string
            example:
              - iso_639_1: en
                name: English
        status:
          type: string
          enum:
            - Rumored
            - Planned
            - In Production
            - Post Production
            - Released
            - Canceled
          example: Released
        tagline:
          type: string
          nullable: true
          example: Mankind was born on Earth. It was never meant to die here.
        title:
          type: string
          example: Interstellar
        video:
          type: boolean
          example: false
        vote_average:
          type: number
          example: 8.1
        vote_count:
          type: integer
          example: 11187
      xml:
        name: Movie
    Error:
      type: object
      properties:
        message:
          type: string
  responses:
    Error-401:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Error-404:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  requestBodies:
    UserArray:
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/User'
      description: List of user object
      required: true